generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//  ENUMS 
enum Status {
  ACTIVE
  PENDING
  TERMINATED
}

enum Role {
  USER
  EMPLOYEE
  ADMIN
}

enum Case {
  SIGNIN
  VERIFICATION
  SIGNOUT
}

enum StockType {
  IN
  OUT
}

// MODELS
model user {
  id           Int            @id @default(autoincrement())
  name         String
  email        String
  phone        String
  age          Int
  address      String
  city         String
  country      String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  auth         auth[]
  auth_history auth_history[]
}

model auth {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  status       Status         @default(ACTIVE)
  role         Role           @default(USER)
  userId       Int
  isSignedIn   Boolean        @default(false)
  user         user           @relation(fields: [userId], references: [id])
  auth_history auth_history[]

  @@index([userId], map: "auth_userId_fkey")
}

model auth_history {
  id          Int      @id @default(autoincrement())
  authId      Int?
  userId      Int?
  signedInAt  DateTime @default(now())
  signedOutAt DateTime @updatedAt
  case        Case     @default(SIGNIN)
  auth        auth?    @relation(fields: [authId], references: [id])
  user        user?    @relation(fields: [userId], references: [id])

  @@index([authId], map: "auth_history_authId_fkey")
  @@index([userId], map: "auth_history_userId_fkey")
}

model product {
  id            String          @id @unique @default(cuid())
  name          String
  description   String          @db.LongText
  price         Float
  sku           String          @unique
  qty           Int
  stock         stock[]
  stock_history stock_history[]

  @@fulltext([description, name])
}

model stock {
  id            Int             @id @default(autoincrement())
  productId     String
  qty           Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  product       product         @relation(fields: [productId], references: [id])
  stock_history stock_history[]

  @@index([productId], map: "stock_productId_fkey")
}

model stock_history {
  id         Int       @id @default(autoincrement())
  stockId    Int
  productId  String
  currQty    Int
  prevQty    Int
  changedQty Int
  type       StockType
  product    product   @relation(fields: [productId], references: [id])
  stock      stock     @relation(fields: [stockId], references: [id])

  @@index([productId], map: "stock_history_productId_fkey")
  @@index([stockId], map: "stock_history_stockId_fkey")
}
